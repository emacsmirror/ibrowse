
* ibrowse

Ibrowse stands for interactive browse, its goal is to be able to control your browser through common actions, be it on browser tabs, history or bookmarks using Emacs.

It relies on the =completing-read= built-in interface, and thus benefits grealty from integration with =consult=, =marginalia=, and =vertico=. For now, it is only implemented for the Chromium Developer Protocol (and thus chromium-based browsers), which should soon be implemented by firefox-based browsers. PR are welcome for other protocols!

This package is originally inspired by the [[https://github.com/kevinmorio/rofi-switch-browser-tabs][Rofi Switch Browser Tabs]] scripts and the [[https://github.com/cpitclaudel/biblio.el][biblio.el]] package, but aspires to have broader functionalities, more integrated with Emacs. While writing the package, I also stumbled upon (and occasionally copied parts of):

- [[https://github.com/kawabata/helm-chrome][helm-chrome]]
- [[https://github.com/xuchunyang/helm-chrome-history][helm-chrome-history]]
- [[https://github.com/xuchunyang/helm-chrome-control][helm-chrome-control]]
- [[https://github.com/anticomputer/chrome.el][chrome.el]]
- [[https://github.com/BlueBoxWare/counsel-chrome-bm][counsel-chrome-bm]]

All implement very close features to ibrowse, but are either more developped (=chrome.el= has a major mode frontend, which I considered unnecessary for a daily use with embark and the minibuffer), rely on =helm= or javascript code, or have more limited functionality. All (except [[https://github.com/anticomputer/chrome.el][chrome.el]], which I didn't copied code from) are licensed under GPLv3+, making this package an "aggregate" also under GPLv3+.

It is composed of three control functionalities for your browser :

** ibrowse-tab.el

To use the functions in =ibrowse-tab.el=, you need to use the Chromium Developer Protocol. Simply run your browser with the option =--remote-debugging-port=9222=.

This file currently introduces the following commands :
- =ibrowse-tab-select=
- =ibrowse-tab-close=
- =ibrowse-tab-copy-url=
- =ibrowse-tab-insert-org-link=
- =ibrowse-tab-insert-markdown-link=

Copying url title is a native embark option.

** ibrowse-history.el

This file has a dependency on =sqlite3=.

This file will introduce the following commands :
- =ibrowse-history-browse-url=
- =ibrowse-history-delete= (Warning: This function can't work with an open browser, and is still alpha -- I haven't checked that every item linked to a history search is properly deleted.)
- =ibrowse-history-copy-url=
- =ibrowse-history-insert-org-link=
- =ibrowse-history-insert-markdown-link=

** ibrowse-bookmark.el

This file will introduce the following commands :
- =ibrowse-bookmark-delete=
- =ibrowse-bookmark-add=
- =ibrowse-bookmark-browse-url=
- =ibrowse-bookmark-copy-url=
- =ibrowse-bookmark-insert-org-link=
- =ibrowse-bookmark-insert-markdown-link=

** Embark functionalities

After loading the file =ibrowse-embark.el=, you can also select commands once a tab is selected, in case you change your mind.

Embark also allows to act on multiple entries as one (you can simply use embark actions to open several tabs or delete several history items at once).

** Changelog

- 0.1.1: Melpa corrections and remove marginalia dependency.
- 0.1.0: Initial release for inclusion in Guix and Melpa.
