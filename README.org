
* ibrowse

Ibrowse stands for interactive browse, its goal is to be able to control your browser through common actions, be it on browser tabs, history or bookmarks using Emacs.

It relies on the =completing-read= built-in interface, and thus benefits grealty from integration with =consult=, =marginalia=, and =vertico=. For supported functionality and comparison with similar packages, check-out below (c is for Chromium, f for Firefox) :

| package             | last commit | tab        | bookmark                | history          |
|---------------------+-------------+------------+-------------------------+------------------|
| [[https://github.com/kawabata/helm-chrome][helm-chrome]]         |        2016 |            | c (json)                |                  |
| [[https://github.com/xuchunyang/helm-chrome-history][helm-chrome-history]] |        2019 |            |                         | c (sql)          |
| [[https://github.com/xuchunyang/helm-chrome-control][helm-chrome-control]] |        2019 | c (mac+js) |                         |                  |
| [[https://github.com/anticomputer/chrome.el][chrome.el]]           |        2021 | c (cdp)    |                         |                  |
| [[https://github.com/BlueBoxWare/counsel-chrome-bm][counsel-chrome-bm]]   |        2021 |            | c (json)                |                  |
| [[https://github.com/cireu/counsel-ffdata][counsel-ffdata]]      |        2019 |            | f (sql)                 | f (sql)          |
| [[https://github.com/nicolas-graves/ibrowse.el/README.org][ibrowse.el]]          |        2023 | c (cdp)    | c (json+radix), f (sql) | c (sql), f (sql) |
|                     |             |            |                         |                  |

Please note that the depth of actions is not comparable, much more actions are available in this package, see below. PR are welcome for other browsers/protocols/functionalities!

It is composed of three control functionalities for your browser :

** ibrowse-tab.el

To use the functions in =ibrowse-tab.el=, you need to use the Chromium Developer Protocol. Simply run your browser with the option =--remote-debugging-port=9222=.

This file currently introduces the following commands :
- =ibrowse-tab-select=
- =ibrowse-tab-close=
- =ibrowse-tab-copy-url=
- =ibrowse-tab-insert-org-link=
- =ibrowse-tab-insert-markdown-link=

Copying url title is a native embark option.

** ibrowse-history.el

This file has a dependency on =sqlite3=.

This file will introduce the following commands :
- =ibrowse-history-browse-url=
- =ibrowse-history-delete= (Warning: This function can't work with an open browser, and is still alpha -- I haven't checked that every item linked to a history search is properly deleted.)
- =ibrowse-history-copy-url=
- =ibrowse-history-insert-org-link=
- =ibrowse-history-insert-markdown-link=

** ibrowse-bookmark.el

This file will introduce the following commands :
- =ibrowse-bookmark-delete=
- =ibrowse-bookmark-add=
- =ibrowse-bookmark-browse-url=
- =ibrowse-bookmark-copy-url=
- =ibrowse-bookmark-insert-org-link=
- =ibrowse-bookmark-insert-markdown-link=

** Embark functionalities

If you have =embark= installed, all actions for tabs, bookmark or history items can be swapped with another one (/Actually.../ and /But first.../ =embark-act= functionality).

Embark also allows to act on multiple entries as one (you can simply use embark actions to open several tabs or delete several history items at once).

** Changelog

- 0.1.8: Various packaging fixes.
- 0.1.7: Various packaging fixes.
- 0.1.6: Renaming and factorising.
- 0.1.5: Move embark configuration to module files.
- 0.1.4: Various packaging fixes.
- 0.1.3: Delete embark dependency.
- 0.1.2: Add embark dependency.
- 0.1.1: Melpa corrections and remove marginalia dependency.
- 0.1.0: Initial release for inclusion in Guix and Melpa.

** Inspiration

This package is originally inspired by the [[https://github.com/kevinmorio/rofi-switch-browser-tabs][Rofi Switch Browser Tabs]] scripts and the [[https://github.com/cpitclaudel/biblio.el][biblio.el]] package, but aspires to have broader functionalities, more integrated with Emacs. While writing the package, I also stumbled upon (and occasionally copied parts of):

- [[https://github.com/kawabata/helm-chrome][helm-chrome]]
- [[https://github.com/xuchunyang/helm-chrome-history][helm-chrome-history]]
- [[https://github.com/xuchunyang/helm-chrome-control][helm-chrome-control]]
- [[https://github.com/anticomputer/chrome.el][chrome.el]]
- [[https://github.com/BlueBoxWare/counsel-chrome-bm][counsel-chrome-bm]]

All implement very close features to ibrowse, but are either more developped (=chrome.el= has a major mode frontend, which I considered unnecessary for a daily use with embark and the minibuffer), rely on =helm= or javascript code, or have more limited functionality. All (except [[https://github.com/anticomputer/chrome.el][chrome.el]], which I didn't copied code from) are licensed under GPLv3+, making this package an "aggregate" also under GPLv3+.
